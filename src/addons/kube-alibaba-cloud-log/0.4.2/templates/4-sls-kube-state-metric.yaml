{{ if .Values.SlsMonitoring }}            
{{ if eq .Values.SlsMonitoring true }}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: sls-kube-state-metrics
    app.kubernetes.io/part-of: kube-prometheus
  name: sls-kube-state-metrics
  namespace: {{ .Values.NameSpace }}
spec:
  ports:
  - name: http
    port: {{ .Values.KubeStateMetricsServicePort }}
    protocol: TCP
    targetPort: 8080
  selector:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: sls-kube-state-metrics
    app.kubernetes.io/part-of: kube-prometheus
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: exporter
    app.kubernetes.io/name: sls-kube-state-metrics
    app.kubernetes.io/part-of: kube-prometheus
    version: "{{ .Values.Version }}"
  name: sls-kube-state-metrics
  namespace: {{ .Values.NameSpace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      version: "{{ .Values.Version }}"
      app.kubernetes.io/component: exporter
      app.kubernetes.io/name: sls-kube-state-metrics
      app.kubernetes.io/part-of: kube-prometheus
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: sls-kube-state-metrics
      labels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: sls-kube-state-metrics
        app.kubernetes.io/part-of: kube-prometheus
        version: "{{ .Values.Version }}"
    spec:
      serviceAccountName: logtail-statefulset
      containers:
      - name: sls-kube-state-metrics
{{ if eq .Values.Net "Internet" }}
        image: registry.{{ .Values.Region }}.aliyuncs.com/log-service/kube-state-metrics:{{ .Values.KubeStateMetrics.Image.Tag }}
{{ else }}
        image: registry-vpc.{{ .Values.Region }}.aliyuncs.com/log-service/kube-state-metrics:{{ .Values.KubeStateMetrics.Image.Tag }}
{{ end }}  
        resources:
          limits:
            cpu: "{{ .Values.KubeStateMetrics.Limit.CPU }}"
            memory: "{{ .Values.KubeStateMetrics.Limit.Memory }}"
          requests:
            cpu: "{{ .Values.KubeStateMetrics.Request.CPU }}"
            memory: "{{ .Values.KubeStateMetrics.Request.Memory }}"
        securityContext:
          runAsUser: 65534
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 30
---
{{ end }}
{{ end }}